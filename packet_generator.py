#!/usr/bin/python
# -*- coding: UTF-8 -*-
## This file is part of ccsocket
## Copyright (C) Tomas Dragoun <drakoviens@gmail.com>
## This program is published under a GPLv3 license
########################################################


from constants import Constants
import string, random
from scapy.all import *

############################
##                        ##
##     PacketGenerator    ##
##                        ##
############################

class PacketGenerator(object):
#----------------------------------------------------------------------------------
    '''
        This class crafts packets of given protocol.
    '''
#----------------------------------------------------------------------------------    
    def __init__(self):
        self._const = Constants()
        self._icmp_seq = 0
#----------------------------------------------------------------------------------
    def generate(self, address, proto):
        ''' Returns generated packet of given protocol '''
        if proto == self._const.PROTO_ICMP:
            return self.generateicmp(address)
        elif proto == self._const.PROTO_ALL:
            return self.generateicmp(address)
#----------------------------------------------------------------------------------
    def generateicmp(self, address):
        ''' Generates ip6 and icmpv6 echo request layers '''
        host = address[0]
        port = address[1]
        icmp = ICMPv6EchoRequest()
        icmp.type = 128
        icmp.code = 0 
        icmp.id = port # ports are differentiated by icmp id field
        icmp.seq = self._icmp_seq # sequence number must be ascending
        self._icmp_seq += 1
        ''' ICMP payload generated by Linux systems '''
        icmp.data =  '''\x29\xff\x5d\x4f\xc4\xb0\x0e\x00\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f\x20\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30\x31\x32\x33\x34\x35\x36\x37'''
        ipv6 = IPv6(dst = host)
        return (ipv6, icmp)
#----------------------------------------------------------------------------------
